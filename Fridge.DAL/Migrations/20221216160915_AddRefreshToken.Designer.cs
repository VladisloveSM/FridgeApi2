// <auto-generated />
using System;
using FridgeApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FridgeApi.DAL.Migrations
{
    [DbContext(typeof(FridgeContext))]
    [Migration("20221216160915_AddRefreshToken")]
    partial class AddRefreshToken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FridgeApi.DAL.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FridgeApi.DAL.Models.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Fridge");
                });

            modelBuilder.Entity("FridgeApi.DAL.Models.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fridge_Model");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31e5b2e5-3a2e-4962-926a-badb01eac767"),
                            Name = "Atlanta",
                            Year = 1998
                        },
                        new
                        {
                            Id = new Guid("fc3a7d16-d828-4173-b2e5-d78f16c255cd"),
                            Name = "Horizon",
                            Year = 1993
                        },
                        new
                        {
                            Id = new Guid("b692b8d2-318c-4313-9749-7885ded9eb5d"),
                            Name = "LG",
                            Year = 2001
                        },
                        new
                        {
                            Id = new Guid("6adfb621-4f35-45f5-8138-e16b688e9c4e"),
                            Name = "Philips",
                            Year = 2000
                        },
                        new
                        {
                            Id = new Guid("64cac99a-bdb6-4c2a-8a4c-71c193de9003"),
                            Name = "Panasonic",
                            Year = 2003
                        });
                });

            modelBuilder.Entity("FridgeApi.DAL.Models.FridgeProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Fridge_Products");
                });

            modelBuilder.Entity("FridgeApi.DAL.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DefaultQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b452bfa-dae1-4990-9c12-4066d7831ac5"),
                            DefaultQuantity = 6,
                            Name = "Banana"
                        },
                        new
                        {
                            Id = new Guid("1bf641d8-3935-452f-9492-7aba54ac3943"),
                            DefaultQuantity = 1,
                            Name = "Grape"
                        },
                        new
                        {
                            Id = new Guid("3db59a93-f24f-42b9-9140-98ca909b6ad9"),
                            DefaultQuantity = 3,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("aaca534a-56dc-4481-82db-f2a6789a2fe1"),
                            DefaultQuantity = 1,
                            Name = "Beaf"
                        },
                        new
                        {
                            Id = new Guid("bdc90f8c-88d0-47b0-b32d-dee7a287b723"),
                            DefaultQuantity = 8,
                            Name = "Cherry"
                        },
                        new
                        {
                            Id = new Guid("cc528b58-4932-4da3-80ea-dd6da81ed226"),
                            DefaultQuantity = 4,
                            Name = "Fish"
                        });
                });

            modelBuilder.Entity("FridgeApi.DAL.Models.Fridge", b =>
                {
                    b.HasOne("FridgeApi.DAL.Models.FridgeModel", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("FridgeApi.DAL.Models.FridgeProduct", b =>
                {
                    b.HasOne("FridgeApi.DAL.Models.Fridge", "Fridge")
                        .WithMany()
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeApi.DAL.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
